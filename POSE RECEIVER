import mediapipe as mp
import cv2
import csv
import os
import numpy as np


mp_drawing = mp.solutions.drawing_utils
mp_holistic = mp.solutions.holistic

cap = cv2.VideoCapture(R'C:/Users/Admin/PycharmProjects/Mental-illness-detection-system/VIDEO/healthy 2.mp4')
#INITIATE HOLISTIC MODEL
with mp_holistic.Holistic(min_detection_confidence=0.5, min_tracking_confidence=0.5) as holistic:

    while cap.isOpened():
        ret, frame = cap.read()

        #RECOLOR FEED
        image = cv2.cvtColor(cv2.flip(frame,1), cv2.COLOR_BGR2RGB)
        image.flags.writeable = False

        #MAKE DETECTIONS
        results = holistic.process(image)
        #print(results.face_landmarks)

        #FACE_LANDMARKS, POSE_LANDMARKS, LEFT_HAND_LANDMARKS, RIGHT_HAND_LANDMARKS

        #RECOLOR IMAGE BACK TO BGR FOR RENDERING
        image.flags.writeable = True
        image = cv2.cvtColor(image, cv2.COLOR_RGB2BGR)

        #DRAW FACE LANDMARKS
        mp_drawing.draw_landmarks(image, results.face_landmarks, mp_holistic.FACEMESH_TESSELATION,
                                  mp_drawing.DrawingSpec(color=(255, 0, 0), thickness=1, circle_radius=1),
                                  mp_drawing.DrawingSpec(color=(0, 255, 0), thickness=1, circle_radius=1)
                                  )
        print("Face Landmark: " + str(results.face_landmarks))

        #DRAW RIGHT HAND LANDMARKS
        mp_drawing.draw_landmarks(image, results.right_hand_landmarks, mp_holistic.HAND_CONNECTIONS,
                                  mp_drawing.DrawingSpec(color=(255,0,0), thickness=2, circle_radius=4),
                                  mp_drawing.DrawingSpec(color=(0,255,0), thickness=2, circle_radius=2)
                                  )
        print("Right Hand Landmark: " + str(results.right_hand_landmarks))

        #DRAW LEFT HAND LANDMARKS
        mp_drawing.draw_landmarks(image, results.left_hand_landmarks, mp_holistic.HAND_CONNECTIONS,
                                  mp_drawing.DrawingSpec(color=(255,0,0), thickness=2, circle_radius=4),
                                  mp_drawing.DrawingSpec(color=(0,255,0), thickness=2, circle_radius=2)
                                  )
        print("Left Hand Landmark: " + str(results.left_hand_landmarks))

        # Pose Detections
        mp_drawing.draw_landmarks(image, results.pose_landmarks, mp_holistic.POSE_CONNECTIONS,
                                  mp_drawing.DrawingSpec(color=(255, 0, 0), thickness=2, circle_radius=4),
                                  mp_drawing.DrawingSpec(color=(0, 255, 0), thickness=2, circle_radius=2)
                                  )
        print("Pose Landmark: " + str(results.pose_landmarks))

        # Export coordinates
        try:
            # Extract Pose landmarks
            pose = results.pose_landmarks.landmark
            pose_row = list(
                np.array([[landmark.x, landmark.y, landmark.z, landmark.visibility] for landmark in pose]).flatten())

            # Extract Face landmarks
            face = results.face_landmarks.landmark
            face_row = list(
                np.array([[landmark.x, landmark.y, landmark.z, landmark.visibility] for landmark in face]).flatten())

            class_name = "Healthy"

            # Concate rows
            row = pose_row+face_row

            # Append class name
            row.insert(0, class_name)

            # Export to CSV
            with open(r'C:/Users/Admin/PycharmProjects/Mental-illness-detection-system/coords.csv', mode='a', newline='') as f:
                csv_writer = csv.writer(f, delimiter=',', quotechar='"', quoting=csv.QUOTE_MINIMAL)
                csv_writer.writerow(row)

        except :
            pass

        cv2.imshow('POSETURE', image)

        if cv2.waitKey(10) & 0xFF == ord('q'):
            break

cap.release()
cv2.destroyAllWindows()
